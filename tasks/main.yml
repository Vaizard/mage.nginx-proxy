---

- name: "Including distro-specific variables"
  include_vars: "vars_{{ ansible_distribution }}.yml"

- name: "Setting up nginx for {{ ansible_distribution }}"
  include: "setup_{{ ansible_distribution }}.yml"
  when: ansible_distribution in [ 'Ubuntu', 'Gentoo' ]

- name: "Ensuring /etc/nginx/snippets/mage_http.conf is present"
  template:
    src: "nginx-snippets/mage_http.conf"
    dest: "/etc/nginx/snippets/mage_http.conf"
    mode: 0644
  notify: 
    - reload nginx

- name: "Ensuring /etc/nginx/snippets/mage_proxyheaders.conf"
  template:
    src: "nginx-snippets/mage_proxyheaders.conf"
    dest: "/etc/nginx/snippets/mage_proxyheaders.conf"
    mode: 0644
  notify: 
    - reload nginx
    
- name: "Ensuring /etc/nginx/snippets/mage_responses.conf"
  template:
    src: "nginx-snippets/mage_responses.conf"
    dest: "/etc/nginx/snippets/mage_responses.conf"
    mode: 0644
  notify: 
    - reload nginx

- name: "Ensuring /etc/nginx/snippets/mage_secure.conf"
  template:
    src: "nginx-snippets/mage_secure.conf"
    dest: "/etc/nginx/snippets/mage_secure.conf"
    mode: 0644
  notify: 
    - reload nginx  

- name: "Ensuring nginx is started and enabled to start at boot."
  service: name=nginx state=started enabled=yes

- name: "Ensuring a current upstream list is provided."
  template:
    src: upstream.j2
    dest: "/etc/nginx/conf.d/upstream.conf"
    mode: 0644
    owner: root
    group: root
  notify:
    - nginx reload

- name: "Ensuring all vhost configurations are present"
  template:
    src: vhost.j2
    dest: "/etc/nginx/sites-available/{{ item.name }}.conf"
    mode: 0644
    owner: root
    group: root
  with_items: "{{ nginx_proxy_server }}"
  notify:
    - nginx reload
   
- name: "Ensuring all vhost configurations are anebled"
  file:
    src: "/etc/nginx/sites-available/{{ item.name }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.name }}.conf"
    mode: 0644
    owner: root
    group: root
    state: link
  with_items: "{{ nginx_proxy_server }}"
  notify:
- nginx reload